name: Release
on:
    push:
        tags:
            - v*.*.*
jobs:
    build:
        name: ${{ matrix.friendlyName }} ${{ matrix.arch }}
        runs-on: ${{ matrix.os }}
        env:
            GH_TOKEN: ${{ secrets.GH_TOKEN }}
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                node: ["19.x"]
                os: [macos-12, windows-2019, ubuntu-20.04]
                arch: [x64]
                include:
                    - os: macos-12
                      friendlyName: macOS
                    - os: windows-2019
                      friendlyName: Windows
                    - os: ubuntu-20.04
                      friendlyName: Ubuntu
        steps:
            - name: Check out Git repository
              uses: actions/checkout@v1

            - name: Use Node.js ${{ matrix.node }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node }}
                  cache: "yarn"

            - name: Install and build dependencies
              id: deps
              run: yarn
              env:
                  npm_config_arch: ${{ matrix.arch }}
                  TARGET_ARCH: ${{ matrix.arch }}}

            - name: Package application(Macos Hack)
              id: macos_packageing
              run: yarn dist --universal -c.mac.identity=null
              env:
                  USE_HARD_LINKS: "false"
              if: ${{ matrix.os == 'macos-12' && startsWith(github.ref,
                  'refs/tags/') }}

            - name: Package application
              id: packageing
              run: yarn dist --x64 --arm64 --publish never
              if: ${{ matrix.os != 'macos-12' && startsWith(github.ref,
                  'refs/tags/') }}

            - name: Publish
              id: publishing
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: |
                      dist/NightPDF*.exe
                      dist/NightPDF*.dmg
                      dist/*.AppImage
                      dist/*.deb
                      dist/*.rpm
                      dist/latest*.yml
                  draft: true
