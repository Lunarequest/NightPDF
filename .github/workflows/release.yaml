name: Release
on: 
  push:
    tags: 
      - v*.*.*
jobs:
  build:
    name: ${{ matrix.friendlyName }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        node: ['16.x']
        os: [macos-11, windows-2019, ubuntu-18.04]
        arch: [x64, arm64]
        include:
          - os: macos-11
            friendlyName: macOS
          - os: windows-2019
            friendlyName: Windows
          - os: ubuntu-18.04
            friendlyName: Ubuntu
        exclude:
          - os: ubuntu-18.04
            arch: arm64
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-
      
      - name: Install and build dependencies
        run: yarn
        env:
          npm_config_arch: ${{ matrix.arch }}
          TARGET_ARCH: ${{ matrix.arch }}

      - name: Package application(Macos Hack)
        env:
          USE_HARD_LINKS: 'false' 
        run: yarn dist -c.mac.identity=null
        if:
          ${{ matrix.os == 'macos-11' && startsWith(github.ref,
          'refs/tags/') }}
      
      - name: Package application
        run: yarn dist
        if:
          ${{ matrix.os != 'macos-11' && startsWith(github.ref,
          'refs/tags/') }}

      - name: Create Release for Linux
        uses: softprops/action-gh-release@v1
        if:
          ${{ matrix.os == 'ubuntu-18.04' && startsWith(github.ref,
          'refs/tags/') }}
        with:
          files: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.txt
          draft: true
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create Release for windows
        uses: softprops/action-gh-release@v1
        if:
          ${{ matrix.os == 'windows-2019' && startsWith(github.ref,
          'refs/tags/') }}
        with:
          files: |
            dist/*.exe
          draft: true
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create Release for macos
        uses: softprops/action-gh-release@v1
        if:
          ${{ matrix.os == 'macos-11' && startsWith(github.ref,
          'refs/tags/') }}
        with:
          files: |
            dist/*.dmg
          draft: true
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
