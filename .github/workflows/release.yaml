name: Release
on:
  push:
    tags:
      - v*.*.*
jobs:
  build:
    name: ${{ matrix.friendlyName }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        node: ["20.x"]
        os: [macos-12, windows-latest, ubuntu-20.04]
        arch: [x64]
        include:
          - os: macos-12
            friendlyName: macOS
          - os: windows-latest
            friendlyName: Windows
          - os: ubuntu-20.04
            friendlyName: Ubuntu
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Install and build dependencies
        id: deps
        run: yarn install --immutable --inline-builds --prefer-offline
        env:
          npm_config_arch: ${{ matrix.arch }}
          TARGET_ARCH: ${{ matrix.arch }}}
          # CI optimizations. Overrides yarnrc.yml options (or their defaults) in the CI action.
          YARN_ENABLE_GLOBAL_CACHE: 'false' # Use local cache folder to keep downloaded archives
          YARN_NM_MODE: 'hardlinks-local' # Hardlinks-(local|global) reduces io / node_modules size
          YARN_INSTALL_STATE_PATH: .yarn/ci-cache/install-state.gz # Very small speedup when lock does not change
          # Other environment variables
          HUSKY: '0' # By default do not run HUSKY install

      - name: Package application
        id: packageing
        run: yarn dist
        env:
          USE_HARD_LINKS: "false"

      - name: Publish
        id: publishing
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/NightPDF*.exe
            dist/NightPDF*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/latest*.yml
          draft: true
